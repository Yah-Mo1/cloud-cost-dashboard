name: CD Workflow

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Terraform environment (workspace) to deploy to"
        required: true
        default: "dev"

env:
  AWS_REGION: eu-west-2

jobs:
  # lint:
  #   name: Terraform Format & Lint
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v4

  #     - name: Setup Terraform
  #       uses: hashicorp/setup-terraform@v3

  #     - name: Check Terraform formatting
  #       working-directory: terraform
  #       run: terraform fmt -check -recursive

  #     - name: Install tflint
  #       run: |
  #         curl -s https://raw.githubusercontent.com/terraform-linters/tflint/master/install_linux.sh | bash

  #     - name: Run tflint
  #       working-directory: terraform
  #       run: tflint --recursive
  #       continue-on-error: true

  checkov:
    name: Checkov Terraform Scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Checkov
        run: pip install checkov

      - name: Run Checkov
        working-directory: terraform
        run: checkov -d . --quiet

  # trivy:
  #   name: Trivy Vulnerability Scan
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v4

  #     - name: Install Trivy
  #       run: |
  #         curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin

  #     - name: Run Trivy scan on repo
  #       run: trivy fs --exit-code 1 --severity HIGH,CRITICAL .

  terraform:
    name: Terraform Plan
    runs-on: ubuntu-latest
    # needs: [lint, checkov, trivy]  # will run if check passes

    outputs:
      env_name: ${{ steps.setenv.outputs.env_name }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.11.2

      - name: Set ENV var
        id: setenv
        run: echo "env_name=${{ github.event.inputs.environment }}" >> $GITHUB_OUTPUT

      - name: Terraform Init
        working-directory: terraform
        run: terraform init -input=false

      - name: Select or Create Workspace
        working-directory: terraform
        run: |
          if terraform workspace list | grep -q "^${{github.event.inputs.environment}}$"; then
            terraform workspace select ${{github.event.inputs.environment}}
          else
            terraform workspace new ${{github.event.inputs.environment}}
          fi

      - name: Validate Terraform Configuration
        working-directory: terraform
        run: terraform validate

      - name: Terraform Plan
        working-directory: terraform
        run: terraform plan -input=false -var-file="${{ github.event.inputs.environment }}.terraform.tfvars" -out=tfplan

      - name: Upload tfplan artifact
        uses: actions/upload-artifact@v4
        with:
          name: tfplan-${{ github.run_id }}
          path: terraform/tfplan
