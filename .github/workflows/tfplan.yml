name: Terraform Plan Workflow

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Terraform environment (workspace) to deploy to"
        # required: true
        default: "dev"

env:
  AWS_REGION: eu-west-2
  ENVIRONMENT_DEV: dev
  ENVIRONMENT_STAGING: staging
  ENVIRONMENT_PROD: prod

jobs:
  lint:
    name: Terraform Format & Lint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Check Terraform formatting
        working-directory: terraform
        run: terraform fmt -check -recursive

  #     - name: Install tflint
  #       run: |
  #         curl -s https://raw.githubusercontent.com/terraform-linters/tflint/master/install_linux.sh | bash

  #     - name: Run tflint
  #       working-directory: terraform
  #       run: tflint --recursive
  #       continue-on-error: true

  checkov:
    name: Checkov Terraform Scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Checkov
        run: pip install checkov

      - name: Run Checkov
        working-directory: terraform
        run: checkov -d . --quiet --skip-check CKV2_AWS_28,CKV2_AWS_19,CKV_AWS_144,CKV2_AWS_12,CKV_AWS_18,CKV_AWS_150,CKV_AWS_290,CKV_AWS_355,CKV_AWS_145

  # trivy:
  #   name: Trivy Vulnerability Scan
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v4

  #     - name: Install Trivy
  #       run: |
  #         curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin

  #     - name: Run Trivy scan on repo
  #       run: trivy fs --exit-code 1 --severity HIGH,CRITICAL .

  terraform:
    name: Terraform Plan
    runs-on: ubuntu-latest
    # needs: [lint, checkov, trivy]  # will run if check passes

    outputs:
      env_name: ${{ steps.setenv.outputs.env_name }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS Credentials using OIDC
        uses: aws-actions/configure-aws-credentials@v4.3.1
        with:
          audience: sts.amazonaws.com.cn
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}

      - name: Test AWS Credentials
        run: aws sts get-caller-identity

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.12.2

      - name: Set ENV var
        id: setenv
        run: echo "env_name=${{env.ENVIRONMENT_DEV}}" >> $GITHUB_OUTPUT

      - name: Terraform Init
        working-directory: terraform
        run: terraform init -input=false

      - name: Select or Create Workspace
        working-directory: terraform
        run: |
          terraform workspace select ${{env.ENVIRONMENT_DEV}} || terraform workspace new ${{env.ENVIRONMENT_DEV}}

      - name: Validate Terraform Configuration
        working-directory: terraform
        run: terraform validate

      - name: Terraform Plan
        working-directory: terraform
        run: terraform plan -input=false -var-file="environments/${{env.ENVIRONMENT_DEV}}/${{env.ENVIRONMENT_DEV}}.terraform.tfvars" -out=tfplan
        #TODO Change this to github event inputs environment (the dev part)

      - name: Upload tfplan artifact
        uses: actions/upload-artifact@v4
        with:
          name: tfplan-${{ github.run_id }}
          path: /Users/yahmoham1/ThreatModelOps/terraform/tfplan
